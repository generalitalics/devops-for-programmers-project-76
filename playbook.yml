- hosts: all

  become: true
  become_method: sudo
  
  tasks:
    - name: Ставим pip
      import_role:
        name: geerlingguy.pip
    
    - name: Ставим Docker
      import_role:
        name: geerlingguy.docker

    - pip:
        name: docker
    
    - name: Copy nginx config file
      ansible.builtin.copy:
        src: nginx.conf
        dest: ./nginx.conf

    - community.docker.docker_network:
        name: my_network

    - community.docker.docker_container:
        name: nginx-proxy
        image: nginx
        restart_policy: always
        state: started
        # env_file: /.env
        ports:
          - 80:80
          - 443:443
        volumes:
          - ./nginx.conf:/etc/nginx/conf.d/default.conf
          - /srv/docker/redmine/redmine/certs:/etc/nginx/certs
        networks:
          - name: my_network

    - community.docker.docker_container:
        name: redmine
        # Обязательно указываем тег, который хотим деплоить
        # Если образа на сервере нет, Ansible его автоматически скачает
        image: redmine
        # Подключаем супервизор
        # Если контейнер остановится, например, из-за ошибок
        # супервизор Docker его перезапустит
        restart_policy: always
        # Запускаем, если не запущен
        state: started
        # Делаем доступным снаружи
        ports:
          - 3000:3000
        env: # Настраиваем
          NODE_ENV: production
          REDMINE_HTTPS: "true"
          REDMINE_DB_POSTGRES: "{{REDMINE_DB_POSTGRES}}"
          REDMINE_DB_PORT: "{{REDMINE_DB_PORT}}"
          REDMINE_DB_DATABASE: "{{REDMINE_DB_DATABASE}}"
          REDMINE_DB_USERNAME: "{{REDMINE_DB_USERNAME}}"
          REDMINE_DB_PASSWORD: "{{REDMINE_DB_PASSWORD}}"
        networks:
          - name: my_network
- hosts: webservers
  become: true
  name: Run datadog agent
  roles: 
    - role: datadog.datadog